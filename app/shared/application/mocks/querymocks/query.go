// Code generated by mockery v2.12.2. DO NOT EDIT.

package querymocks

import (
	testing "testing"

	query "github.com/creepzed/url-shortener-service/app/shared/application/query"
	mock "github.com/stretchr/testify/mock"
)

// Query is an autogenerated mock type for the Query type
type Query struct {
	mock.Mock
}

// Type provides a mock function with given fields:
func (_m *Query) Type() query.Type {
	ret := _m.Called()

	var r0 query.Type
	if rf, ok := ret.Get(0).(func() query.Type); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(query.Type)
	}

	return r0
}

// NewQuery creates a new instance of Query. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewQuery(t testing.TB) *Query {
	mock := &Query{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
